openapi: "3.0.3"
info:
  title: "office_user_auto_create API"
  description: "office_user_auto_create API"
  version: "1.0.0"
servers:
- url: "https://office_user_auto_create"
paths:
  /json/jackson:
    get:
      description: "get(\"/\") { <br> call.respondText(\"HELLO WORLD!\", contentType\
        \ = ContentType.Text.Plain) <br> } <br> get<MyLocation> { <br> call.respondText(\"\
        Location: name=${it.name}, arg1=${it.arg1}, arg2=${it.arg2}\") <br> } <br>\
        \ // Register nested routes <br> get<Type.Edit> { <br> call.respondText(\"\
        Inside $it\") <br> } <br> get<Type.List> { <br> call.respondText(\"Inside\
        \ $it\") <br> }"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/v1/announcement/{id}:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResultBase"
  /api/v1/office/config:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResultBase"
  /api/v1/office/create:
    post:
      description: ""
      parameters:
      - name: "nickname"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "password"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "domain"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "skuId"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "code"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResultBase"
components:
  schemas:
    Object:
      type: "object"
      properties: {}
    ResultBase:
      type: "object"
      properties:
        success:
          type: "boolean"
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
        data:
          $ref: "#/components/schemas/Object"